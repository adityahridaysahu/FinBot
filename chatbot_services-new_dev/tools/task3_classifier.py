from tools.get_completion import get_completion

def task3_classifier(question, glo_sentences, csum_bot, csum_user):

    # prompt to classify general or bank specific or not
    prompt = f"""
    You are a support executive at Goldman Sachs (An investments banking company).

      From now, if I want to refer to your final out, I will explicitly use the word "RESPONSE".

      When I use the word "QUESTION", I will be explicitly referring to the following question

      delimited by 3 backticks '''{question}'''.

     

      Also assume that you are given the conversation history between you and the customer enclosed in 2 backticks in JSON format

      where the key is either bot or customer and the value is the corresponding cumulative summary ''"bot": "{csum_bot}", "customer": "{csum_user}''.

      Also you are given globalDb response delimited by 3 backticks ```{glo_sentences}```.

 

      If it is a company specific or Goldman Specific Query which is not in your knowledge utilize globalDB and convoDB and generate

      the accurate and precise RESPONSE in ANSWER format.

      else utilise convoDB and give only RESPONSE according to your knowledge in given ANSWER format.

 

      Now use the information in this prompt along with the QUESTION to generate an ideal RESPONSE for the specified QUESTION.

 

      ANSWER : [only answer generated by you]
    """

    result = get_completion(prompt)
    status = result["status"]
    generated_text = result["content"]
    # print(f"p3 result : {generated_text}")

    text = generated_text
    if text.find("RESPONSE:") != -1:
        start_position = text.find("RESPONSE:") + len("RESPONSE:")
        correct_response = text[start_position:].strip()
    else :
        correct_response = generated_text
    # print(correct_response)
    
    return {
        "result" : correct_response,
        "status" : status
    }